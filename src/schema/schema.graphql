 type Query {
    "Obtenemos la lista de todos los usuarios"
    users: [User!]!
    "Iniciamos sesion en el sistema"
    login(email: String!, password: String!): User!
    "Obtener nuestra informacion con el token"
    me: User!
    
    empleados: [Empleado!]!
    herramientas: [Herramienta!]!
    movimientos: [Movimiento!]!
}


type User {
    id: ID!
    name: String!
    lastname: String!
    email: String!
    password: String
    registerDate: String!
}

input UserInput{
    name: String!
    lastname: String!
    email: String!
    password: String!
}

type Herramienta{
    id: ID!
    tipo: String!
    estado:String!
    nombre_herramienta: String!
    codigo_herramienta: String!
    descripcion:String!
    registerDate: String!
}

input HerramientaInput{
    tipo: String!
    estado:String!
    nombre_herramienta: String!
    codigo_herramienta: String!
    descripcion:String!
}


type Empleado{
    id: ID!
    no_ficha: String!
    nombre_empleado: String!
    apellido_empleado: String!
    telefono: Int!
    registerDate: String!
}

input EmpleadoInput{
    no_ficha: String!
    nombre_empleado: String!
    apellido_empleado: String!
    telefono: Int!
}

type Movimiento{
    id: ID!
    fecha: String!
    bodeguero:String!
    no_ficha_empleado: String!
    codigo_herramienta: String!
    tipo: String!
}

input MovimientoInput{
    bodeguero:String!
    no_ficha_empleado: String!
    codigo_herramienta: String!
    tipo: String!
}
    
type Mutation{
    "Registro de los usuarios en el sistema"
    registerUser(user: UserInput): User!
 
    registerEmpleado(empleado: EmpleadoInput): Empleado!
    eliminarEmpleado(id: ID): Empleado!

    registerHerramienta(herramienta: HerramientaInput): Herramienta!
    
    registerMovimiento(movimiento: MovimientoInput): Movimiento!
}